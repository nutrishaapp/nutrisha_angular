{"version":3,"file":"src_app_pages_profile_profile_module_ts.js","mappings":"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","sources":["./src/app/pages/profile/profile-details/profile-details.component.ts","./src/app/pages/profile/profile-details/profile-details.component.html","./src/app/pages/profile/profile-routing.module.ts","./src/app/pages/profile/profile.module.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject, take, takeUntil, tap } from 'rxjs';\r\nimport {\r\n  AdminUserData,\r\n  UserActions,\r\n  UserState,\r\n} from '../../../core/store/auth';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../../core/auth/services/auth.service';\r\nimport { Media } from '../../../core/shared';\r\n\r\n@Component({\r\n  selector: 'app-profile-details',\r\n  templateUrl: './profile-details.component.html',\r\n  styleUrls: ['./profile-details.component.scss'],\r\n})\r\nexport class ProfileDetailsComponent implements OnInit, OnDestroy {\r\n  userDetails: AdminUserData;\r\n  currentSelectUserImage: string | undefined;\r\n  currentSelectUserMedia: Media;\r\n  changePasswordForm: FormGroup;\r\n\r\n  userName = '';\r\n  private unsubscribe = new Subject<void>();\r\n  mainInfoForm: FormGroup;\r\n  constructor(\r\n    private store: Store,\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params\r\n      .pipe(\r\n        take(1),\r\n        takeUntil(this.unsubscribe),\r\n        tap((params) => {\r\n          const profileId = params['id'];\r\n          if (profileId) {\r\n            return;\r\n          }\r\n\r\n          this.store\r\n            .select(UserState.currentUser)\r\n            .pipe(takeUntil(this.unsubscribe))\r\n            .subscribe((data) => {\r\n              this.userDetails = data;\r\n              this.userName = this.userDetails?.name;\r\n              this.currentSelectUserImage = this.userDetails?.personalImage;\r\n              this.setInfoForm();\r\n            });\r\n        })\r\n      )\r\n      .subscribe();\r\n\r\n    this.changePasswordForm = this.formBuilder.group({\r\n      oldPassword: [null, [Validators.required]],\r\n      newPassword: [null, [Validators.required]],\r\n      confirmPassword: [null, [Validators.required]],\r\n    });\r\n\r\n    this.setInfoForm();\r\n  }\r\n\r\n  setInfoForm() {\r\n    this.mainInfoForm = this.formBuilder.group({\r\n      username: [this.userDetails?.name, [Validators.required]],\r\n      email: [this.userDetails?.email],\r\n      role: [this.userDetails?.roleName],\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  changePassword() {\r\n    this.authService\r\n      .changePassword({\r\n        oldPassword: this.changePasswordForm.value.oldPassword,\r\n        newPassword: this.changePasswordForm.value.newPassword,\r\n      })\r\n      .pipe(tap(() => this.changePasswordForm.setValue({})))\r\n      .subscribe();\r\n  }\r\n\r\n  updateProfile() {\r\n    this.store.dispatch(\r\n      new UserActions.CurrentUserDataUpdated({\r\n        name: this.mainInfoForm.value.username,\r\n        email: this.mainInfoForm.value.email,\r\n        image: this.currentSelectUserMedia,\r\n      })\r\n    );\r\n  }\r\n\r\n  userImageChanged(files: FileList) {\r\n    if (!files || !files.length || files.length > 1) return;\r\n    const image = files.item(0);\r\n    this.currentSelectUserMedia = new Media({\r\n      file: image,\r\n    });\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(image);\r\n    fileReader.onload = (e) => {\r\n      this.currentSelectUserImage = fileReader.result as string;\r\n    };\r\n  }\r\n}\r\n","<div class=\"mx-3\">\r\n  <h3>{{ \"PROFILE.MY_PROFILE\" | translate }}</h3>\r\n\r\n  <div class=\"mx-3\" *ngIf=\"userDetails\">\r\n    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n      <div class=\"profile-image__container\" (click)=\"imageFile.click()\">\r\n        <img\r\n          class=\"w-100 h-100\"\r\n          [src]=\"currentSelectUserImage ?? 'assets/media/no-profile-image.png'\"\r\n        />\r\n\r\n        <div class=\"profile-image__edit-image\">\r\n          <span>{{ \"PROFILE.EDIT_IMAGE\" | translate }}</span>\r\n        </div>\r\n      </div>\r\n      <span class=\"margin-start-1\" [textContent]=\"userName\"></span>\r\n    </div>\r\n\r\n    <form [formGroup]=\"mainInfoForm\" class=\"w-50 d-flex flex-column\">\r\n      <input\r\n        #imageFile\r\n        (change)=\"userImageChanged(imageFile.files)\"\r\n        type=\"file\"\r\n        [accept]=\"'image/*'\"\r\n        hidden\r\n      />\r\n\r\n      <mat-form-field>\r\n        <mat-label> {{ \"ADMIN_USERS.NAME_LABEL\" | translate }} </mat-label>\r\n        <input matInput formControlName=\"username\" [(ngModel)]=\"userName\" />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <mat-label> {{ \"AUTH.EMAIL\" | translate }} </mat-label>\r\n        <input matInput formControlName=\"email\" />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <mat-label> {{ \"ADMIN_USERS.ROLE_LABEL\" | translate }} </mat-label>\r\n        <input matInput readonly formControlName=\"role\" />\r\n      </mat-form-field>\r\n\r\n      <button\r\n        mat-flat-button\r\n        color=\"primary\"\r\n        [disabled]=\"mainInfoForm.touched && mainInfoForm.invalid\"\r\n        (click)=\"updateProfile()\"\r\n      >\r\n        {{ \"PROFILE.UPDATE_PROFILE\" | translate }}\r\n      </button>\r\n    </form>\r\n\r\n    <div class=\"mt-3\">\r\n      <p>{{ \"AUTH.CHANGE_PASSWORD\" | translate }}</p>\r\n      <form [formGroup]=\"changePasswordForm\" class=\"w-50 d-flex flex-column\">\r\n        <mat-form-field>\r\n          <mat-error>\r\n            {{ \"VALIDATION_ERRORS.REQUIRED\" | translate }}\r\n          </mat-error>\r\n          <mat-label> {{ \"AUTH.OLD_PASSWORD\" | translate }} </mat-label>\r\n          <input matInput formControlName=\"oldPassword\" type=\"password\" />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-error>\r\n            {{ \"VALIDATION_ERRORS.REQUIRED\" | translate }}\r\n          </mat-error>\r\n          <mat-label> {{ \"AUTH.NEW_PASSWORD\" | translate }} </mat-label>\r\n          <input matInput formControlName=\"newPassword\" type=\"password\" />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-error>\r\n            {{ \"VALIDATION_ERRORS.REQUIRED\" | translate }}\r\n          </mat-error>\r\n          <mat-label> {{ \"AUTH.CONFIRM_PASSWORD\" | translate }} </mat-label>\r\n          <input matInput formControlName=\"confirmPassword\" type=\"password\" />\r\n        </mat-form-field>\r\n\r\n        <button\r\n          mat-flat-button\r\n          color=\"primary\"\r\n          [disabled]=\"changePasswordForm.invalid\"\r\n          (click)=\"changePassword()\"\r\n        >\r\n          {{ \"AUTH.CHANGE_PASSWORD\" | translate }}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Route, RouterModule } from '@angular/router';\r\nimport { ProfileDetailsComponent } from './profile-details/profile-details.component';\r\n\r\nconst routes: Route[] = [\r\n  {\r\n    path: 'my-profile',\r\n    component: ProfileDetailsComponent,\r\n  },\r\n];\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProfileRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProfileDetailsComponent } from './profile-details/profile-details.component';\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [ProfileDetailsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ProfileRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class ProfileModule {}\r\n"],"names":[],"sourceRoot":"webpack:///"}