{"version":3,"file":"src_app_pages_meals_meals_module_ts.js","mappings":"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","sources":["./src/app/core/meals/meal.service.ts","./src/app/core/meals/models/meal-details.model.ts","./src/app/core/meals/models/meal-type.enum.ts","./src/app/core/store/meals/meals.action.ts","./src/app/core/store/meals/meals.state.ts","./src/app/pages/meals/meal-details/meal-details.component.ts","./src/app/pages/meals/meal-details/meal-details.component.html","./src/app/pages/meals/meal-edit/meal-edit.component.ts","./src/app/pages/meals/meal-edit/meal-edit.component.html","./src/app/pages/meals/meals-list/meals-list.component.ts","./src/app/pages/meals/meals-list/meals-list.component.html","./src/app/pages/meals/meals-routing.module.ts","./src/app/pages/meals/meals.module.ts"],"sourcesContent":["import { Injectable, Query } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport {\r\n  BaseV1ObjectResponseModel,\r\n  BaseV1ResponseModel,\r\n  HttpUtilsService,\r\n  PagedListQueryModel,\r\n} from '../shared';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { MealListModel } from './models/meal-list.model';\r\nimport { MealDetailsModel } from './models/meal-details.model';\r\nimport { MealLookupListModel } from './models/meal-lookup-list.model';\r\n\r\nconst mealAPI = environment.baseAdminV1Url + 'Meal';\r\n\r\n@Injectable()\r\nexport class MealService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getPagedList(\r\n    queryParams: PagedListQueryModel\r\n  ): Observable<BaseV1ResponseModel<MealListModel[]>> {\r\n    return this.httpClient.get<BaseV1ResponseModel<MealListModel[]>>(\r\n      mealAPI + '/getPagedList',\r\n      {\r\n        params: HttpUtilsService.prepareGetPagedListQueryParams(queryParams),\r\n      }\r\n    );\r\n  }\r\n\r\n  getById(id: string): Observable<BaseV1ObjectResponseModel<MealDetailsModel>> {\r\n    return this.httpClient.get<BaseV1ObjectResponseModel<MealDetailsModel>>(\r\n      mealAPI + '/getById',\r\n      {\r\n        params: {\r\n          id: id,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getMealsLookUp(): Observable<BaseV1ObjectResponseModel<MealLookupListModel>> {\r\n    return this.httpClient.get<BaseV1ObjectResponseModel<MealLookupListModel>>(\r\n      mealAPI + '/getMealsLookup'\r\n    );\r\n  }\r\n\r\n  getIngredientsLookUp(\r\n    searchValue\r\n  ): Observable<BaseV1ObjectResponseModel<string[]>> {\r\n    return this.httpClient.get<BaseV1ObjectResponseModel<string[]>>(\r\n      mealAPI + '/GetIngredientLookup',\r\n      {\r\n        params: new HttpParams().append('searchWord', searchValue),\r\n      }\r\n    );\r\n  }\r\n\r\n  post(value: any): Observable<BaseV1ObjectResponseModel<string>> {\r\n    const form = this.prepareFormModel(value);\r\n    return this.httpClient.post<BaseV1ObjectResponseModel<string>>(\r\n      mealAPI + '/post',\r\n      form\r\n    );\r\n  }\r\n\r\n  postIngredients(value: string): Observable<any> {\r\n    return this.httpClient.post(mealAPI + '/PostIngredient', { name: value });\r\n  }\r\n\r\n  put(id: string, value: any) {\r\n    const form = this.prepareFormModel(value);\r\n    form.append('id', id);\r\n\r\n    return this.httpClient.put<BaseV1ObjectResponseModel<string>>(\r\n      mealAPI + '/put',\r\n      form\r\n    );\r\n  }\r\n\r\n  prepareFormModel(value: any) {\r\n    const form = new FormData();\r\n    form.append('Name', value.name);\r\n    form.append('MealType', value.label);\r\n    if (value.cockingTime)\r\n      form.append('CockingTime', value.cockingTime ?? null);\r\n\r\n    if (value.prepTime) form.append('PreparingTime', value.prepTime);\r\n    const coverImage = value.coverImage?.file;\r\n\r\n    if (coverImage) {\r\n      form.append('CoverImage', coverImage as Blob, coverImage.name);\r\n    }\r\n    if (value.steps) form.append('MealSteps', value.steps);\r\n\r\n    form.append('Allergies', value.allergies);\r\n\r\n    const ingredients = value.ingredients;\r\n    ingredients?.forEach((ingredient, i) => {\r\n      const key = `Ingredients[${i}]`;\r\n      form.append(key + '.quantity', ingredient?.quantity?.toString());\r\n      form.append(key + '.IngredientName', ingredient?.name);\r\n      form.append(key + '.UnitType', ingredient?.unitType?.toString());\r\n    });\r\n\r\n    return form;\r\n  }\r\n  delete(id) {\r\n    return this.httpClient.delete(mealAPI + '/delete', {\r\n      params: { id },\r\n    });\r\n  }\r\n}\r\n","import { MealType } from './meal-type.enum';\r\n\r\nexport class MealDetailsModel {\r\n  id: string;\r\n  name: string;\r\n  mealType: MealType = MealType.Breakfast;\r\n  coverImage: string;\r\n  preparingTime: string;\r\n  cockingTime: string;\r\n  ingredients: IngredientModel[];\r\n  mealSteps: string;\r\n  allergies: string;\r\n  canEdit: boolean;\r\n}\r\n\r\nexport class IngredientModel {\r\n  quantity: number;\r\n  unitType: IngredientUnitType;\r\n  ingredientName: string;\r\n}\r\nexport enum IngredientUnitType {\r\n  Liter,\r\n  Cup,\r\n  Tbs,\r\n  Tsp,\r\n  Kg,\r\n  Gram,\r\n  Slice,\r\n  Piece,\r\n}\r\n\r\nexport const ingredientUnitTypeKeys = [\r\n  'Liter',\r\n  'Cup',\r\n  'Tbs',\r\n  'Tsp',\r\n  'Kg',\r\n  'Gram',\r\n  'Slice',\r\n  'Piece',\r\n];\r\n","export enum MealType {\r\n  Breakfast = 0,\r\n  Lunch = 1,\r\n  Dinner = 2,\r\n  Snacks = 3,\r\n  Supplements = 4,\r\n  Water = 5,\r\n  ExtraBites = 6,\r\n  Recommended = 7,\r\n  DeliciousSnack = 8,\r\n  SomethingSpicy = 9,\r\n  SomethingSweet = 10\r\n}\r\n\r\nexport const getMealTypeByKey = (key: string) => {\r\n  const firstLetter = key[0].toUpperCase();\r\n  return MealType[firstLetter + key.substring(1)];\r\n};\r\n\r\nexport const mealTypes: MealType[] = [\r\n  MealType.Breakfast,\r\n  MealType.Lunch,\r\n  MealType.Dinner,\r\n  MealType.Snacks,\r\n  MealType.Supplements,\r\n  MealType.Recommended,\r\n  MealType.DeliciousSnack,\r\n  MealType.SomethingSpicy,\r\n  MealType.SomethingSweet,\r\n];\r\n","import { PagedListQueryModel } from '../../shared';\r\n\r\nexport namespace MealsActions {\r\n  export class LoadMealsPage {\r\n    public static type = '[Meals] Load Meals';\r\n\r\n    constructor(public queryParams: PagedListQueryModel) {}\r\n  }\r\n\r\n  export class LoadMealDetails {\r\n    public static type = '[Meals] Load Meal Details';\r\n\r\n    constructor(public id: string) {}\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { MealListModel } from '../../meals/models/meal-list.model';\r\nimport { MealService } from '../../meals/meal.service';\r\nimport { tap } from 'rxjs';\r\nimport { MealsActions } from './meals.action';\r\nimport { MealDetailsModel } from '../../meals/models/meal-details.model';\r\nimport { MealType } from '../../meals/models/meal-type.enum';\r\n\r\ninterface MealStateModel {\r\n  meals: MealListModel[];\r\n  totalRows: number;\r\n  lastLoadedMeal: MealDetailsModel;\r\n}\r\n\r\n@Injectable()\r\n@State<MealStateModel>({\r\n  name: 'meals',\r\n})\r\nexport class MealsState {\r\n  constructor(private mealService: MealService) {}\r\n\r\n  @Action(MealsActions.LoadMealsPage)\r\n  getPagedList(\r\n    ctx: StateContext<MealStateModel>,\r\n    action: MealsActions.LoadMealsPage\r\n  ) {\r\n    return this.mealService.getPagedList(action.queryParams).pipe(\r\n      tap((result) => {\r\n        const data = result.data;\r\n        ctx.setState({\r\n          ...ctx.getState(),\r\n          meals: data,\r\n          totalRows: result.totalRows,\r\n          lastLoadedMeal: null,\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  @Action(MealsActions.LoadMealDetails)\r\n  loadMealDetails(\r\n    ctx: StateContext<MealStateModel>,\r\n    action: MealsActions.LoadMealDetails\r\n  ) {\r\n    return this.mealService.getById(action.id).pipe(\r\n      tap((result) => {\r\n        const data = result.data;\r\n        ctx.setState({\r\n          ...ctx.getState(),\r\n          lastLoadedMeal: data,\r\n          totalRows: 0,\r\n          meals: null,\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  @Selector()\r\n  static lastPage(state: MealStateModel) {\r\n    return state.meals;\r\n  }\r\n\r\n  @Selector()\r\n  static totalRows(state: MealStateModel) {\r\n    return state.totalRows;\r\n  }\r\n\r\n  @Selector()\r\n  static lastLoadedMeal(state: MealStateModel) {\r\n    return state.lastLoadedMeal;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable, of, switchMap, takeUntil, tap } from 'rxjs';\r\nimport {\r\n  IngredientUnitType,\r\n  MealDetailsModel,\r\n} from '../../../core/meals/models/meal-details.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { MealsActions } from '../../../core/store/meals/meals.action';\r\nimport { MealsState } from '../../../core/store/meals/meals.state';\r\nimport { MealListModel } from '../../../core/meals/models/meal-list.model';\r\nimport { MealType } from '../../../core/meals/models/meal-type.enum';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmDialogComponent } from '../../../core/shared/confirm-dialog/confirm-dialog.component';\r\nimport { MealService } from '../../../core/meals/meal.service';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-meal-details',\r\n  templateUrl: './meal-details.component.html',\r\n  styleUrls: ['./meal-details.component.scss'],\r\n})\r\nexport class MealDetailsComponent implements OnInit {\r\n  mealType = MealType;\r\n  mealId: string;\r\n  ingredientUnitType = IngredientUnitType;\r\n\r\n  @Select(MealsState.lastLoadedMeal)\r\n  mealDetails$: Observable<MealDetailsModel>;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private matDialog: MatDialog,\r\n    private mealService: MealService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params\r\n      .pipe(untilDestroyed(this))\r\n      .subscribe((params) => {\r\n        const id = params['id'];\r\n        this.mealId = id;\r\n\r\n        if (id) {\r\n          this.store.dispatch(new MealsActions.LoadMealDetails(id));\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteMeal() {\r\n    this.matDialog\r\n      .open(ConfirmDialogComponent, {})\r\n      .afterClosed()\r\n      .pipe(\r\n        switchMap((d) => {\r\n          if (d) {\r\n            return this.mealService\r\n              .delete(this.mealId)\r\n              .pipe(tap((r) => this.router.navigateByUrl('meals')));\r\n          }\r\n\r\n          return of(false);\r\n        }),\r\n        untilDestroyed(this)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  editMeal() {\r\n    this.router.navigate([], { relativeTo: this.activatedRoute });\r\n    this.router.navigateByUrl(`meals/edit/${this.mealId}`);\r\n  }\r\n}\r\n","<div\r\n  *ngIf=\"mealDetails$ | async; let mealDetails\"\r\n  class=\"p-5 w-100 d-flex flex-column justify-content-center align-items-center\"\r\n>\r\n  <div\r\n    class=\"w-100 alert alert-primary\"\r\n    *ngIf=\"mealDetails?.id && !mealDetails.canEdit\"\r\n  >\r\n    {{ \"MEALS.PART_OF_MEAL_PLAN\" | translate }}\r\n  </div>\r\n\r\n  <div class=\"w-100 d-flex justify-content-start\">\r\n    <div class=\"w-100 mb-3 d-flex justify-content-start flex-wrap\">\r\n      <h2 class=\"meal-name text-break\">{{ mealDetails.name }}</h2>\r\n      <div\r\n        *ngIf=\"\r\n          mealDetails.mealType == mealType.Supplements;\r\n          else nonSupplements\r\n        \"\r\n      ></div>\r\n      <ng-template #nonSupplements>\r\n        <div class=\"vertical-breaker\"></div>\r\n        <div class=\"mx-3 d-flex flex-column justify-content-center\">\r\n          <h2>{{ mealDetails.preparingTime }}</h2>\r\n          <p>{{ \"MEALS.PREP_TIME\" | translate }}</p>\r\n        </div>\r\n        <div class=\"vertical-breaker\"></div>\r\n        <div class=\"mx-3 d-flex flex-column justify-content-center\">\r\n          <h2>{{ mealDetails.cockingTime }}</h2>\r\n          <p>{{ \"MEALS.COOK_TIME\" | translate }}</p>\r\n        </div>\r\n      </ng-template>\r\n      <div class=\"vertical-breaker\"></div>\r\n      <div class=\"mx-3 d-flex flex-column justify-content-center\">\r\n        <h2>\r\n          {{\r\n            \"MEALS.MEALS_LABELS.\" + (mealType[mealDetails.mealType] | uppercase)\r\n              | translate\r\n          }}\r\n        </h2>\r\n        <p>{{ \"MEALS.LABEL\" | translate }}</p>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button mat-icon-button [matMenuTriggerFor]=\"optionsMenu\">\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n      <mat-menu #optionsMenu=\"matMenu\">\r\n        <button mat-menu-item (click)=\"editMeal()\">\r\n          {{ \"SHARED.EDIT\" | translate }}\r\n        </button>\r\n        <button *ngIf=\"mealDetails?.id && mealDetails.canEdit\" mat-menu-item class=\"text-danger\" (click)=\"deleteMeal()\">\r\n          {{ \"SHARED.DELETE\" | translate }}\r\n        </button>\r\n      </mat-menu>\r\n    </div>\r\n  </div>\r\n\r\n  <img\r\n    [alt]=\"mealDetails.name\"\r\n    [src]=\"mealDetails.coverImage\"\r\n    class=\"meal-image w-100\"\r\n  />\r\n\r\n  <div class=\"w-100 d-flex justify-content-start align-items-start mt-3\">\r\n    <div\r\n      *ngIf=\"mealDetails.mealType != mealType.Supplements\"\r\n      class=\"meal-container margin-end-3\"\r\n    >\r\n      <h2 class=\"m-0\">{{ \"MEALS.INGREDIENTS\" | translate }}</h2>\r\n      <p\r\n        class=\"text-break\"\r\n        *ngFor=\"let ingredient of mealDetails.ingredients; let index = index\"\r\n      >\r\n        {{ index + 1 }}- {{ ingredient.quantity }}\r\n\r\n        {{\r\n          \"MEALS.MEAL_UNIT_TYPE.\" + ingredientUnitType[ingredient.unitType]\r\n            | translate\r\n        }}\r\n        {{ ingredient.ingredientName }}\r\n      </p>\r\n    </div>\r\n    <div\r\n      *ngIf=\"mealDetails.mealType != mealType.Supplements\"\r\n      class=\"meal-container\"\r\n    >\r\n      <h2 class=\"m-0\">{{ \"MEALS.STEPS\" | translate }}</h2>\r\n      <p class=\"text-break\">\r\n        {{ mealDetails.mealSteps }}\r\n      </p>\r\n    </div>\r\n    <div class=\"meal-container margin-start-3\">\r\n      <h2 class=\"m-0\">{{ \"MEALS.ALLERGIES\" | translate | translate }}</h2>\r\n      <p class=\"text-break\">\r\n        {{ mealDetails.allergies }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormArray,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MealType, mealTypes } from '../../../core/meals/models/meal-type.enum';\r\nimport { MealService } from '../../../core/meals/meal.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport {\r\n  IngredientModel,\r\n  IngredientUnitType,\r\n  ingredientUnitTypeKeys,\r\n  MealDetailsModel,\r\n} from '../../../core/meals/models/meal-details.model';\r\nimport { map, Observable, tap } from 'rxjs';\r\nimport { MealsActions } from '../../../core/store/meals/meals.action';\r\nimport { Store } from '@ngxs/store';\r\nimport { MealsState } from '../../../core/store/meals/meals.state';\r\nimport { Media } from '../../../core/shared';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-meal-details',\r\n  templateUrl: './meal-edit.component.html',\r\n  styleUrls: ['./meal-edit.component.scss'],\r\n})\r\nexport class MealEditComponent implements OnInit {\r\n  meal: MealDetailsModel;\r\n  mealForm: FormGroup;\r\n\r\n  ingredientsForm: FormArray;\r\n\r\n  // Enums\r\n  mealType = MealType;\r\n  mealTypeKeys = mealTypes;\r\n  selectedMealType:\r\n    | MealType.Breakfast\r\n    | MealType.Lunch\r\n    | MealType.Dinner\r\n    | MealType.Snacks\r\n    | MealType.Supplements\r\n    | MealType.Recommended\r\n    | MealType.DeliciousSnack\r\n    | MealType.SomethingSpicy\r\n    | MealType.SomethingSweet\r\n    | MealType;\r\n\r\n  ingredientUnitType = IngredientUnitType;\r\n  ingredientUnitTypeKeys = ingredientUnitTypeKeys;\r\n  ingredients$: Observable<string[]>;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private mealService: MealService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private store: Store\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.meal = new MealDetailsModel();\r\n    this.selectedMealType = MealType.Breakfast;\r\n    this.initializeMealForm();\r\n\r\n    this.activatedRoute.params\r\n      .pipe(\r\n        untilDestroyed(this),\r\n        map((p) => p['id']),\r\n        tap((mealId) => {\r\n          if (!mealId) {\r\n            return;\r\n          }\r\n\r\n          this.loadMeal(mealId);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  loadMeal(mealId) {\r\n    this.store.dispatch(new MealsActions.LoadMealDetails(mealId));\r\n\r\n    this.store\r\n      .select(MealsState.lastLoadedMeal)\r\n      .pipe(untilDestroyed(this))\r\n      .subscribe((meal) => {\r\n        if (!meal?.id) {\r\n          return;\r\n        }\r\n\r\n        this.selectedMealType = this.meal.mealType;\r\n        this.meal = meal;\r\n        this.initializeMealForm();\r\n      });\r\n  }\r\n\r\n  initializeMealForm() {\r\n    this.mealForm = this.formBuilder.group({\r\n      name: this.formBuilder.control(this.meal?.name, [Validators.required]),\r\n      label: this.formBuilder.control(this.meal?.mealType, [\r\n        Validators.required,\r\n      ]),\r\n      prepTime: this.formBuilder.control(this.meal?.preparingTime, [\r\n        this.nonSupplementValidator.bind(this),\r\n      ]),\r\n      cockingTime: this.formBuilder.control(this.meal?.cockingTime, [\r\n        this.nonSupplementValidator.bind(this),\r\n      ]),\r\n      steps: this.formBuilder.control(this.meal?.mealSteps, []),\r\n      allergies: this.formBuilder.control(this.meal?.allergies, []),\r\n      coverImage: this.formBuilder.control(\r\n        this.meal?.coverImage\r\n          ? new Media({\r\n            url: this.meal.coverImage,\r\n          })\r\n          : null,\r\n        []\r\n      ),\r\n    });\r\n\r\n    this.mealForm.setControl('ingredients', this.initializeIngredientForm());\r\n  }\r\n\r\n  submit() {\r\n    const meal: any = {\r\n      name: this.mealForm.value.name,\r\n      label: this.mealForm.value.label,\r\n      allergies: this.mealForm.value.allergies,\r\n      coverImage: this.mealForm.value.coverImage,\r\n    };\r\n\r\n    if (meal.label != MealType.Supplements) {\r\n      meal.prepTime = this.mealForm.value.prepTime;\r\n      meal.cockingTime = this.mealForm.value.cockingTime;\r\n      meal.steps = this.mealForm.value.steps;\r\n      meal.ingredients = [];\r\n      /*meal.ingredients = this.mealForm.value.ingredients;\r\n      if(this.mealForm.value.ingredients && this.mealForm.value.ingredients.length == 1 && this.mealForm.value.ingredients[0].quantity == null) {\r\n        meal.ingredients = null;\r\n      }*/\r\n      if (this.mealForm.value.ingredients) {\r\n        for (let i = 0; i < this.mealForm.value.ingredients.length; i++) {\r\n          let ingredient = this.mealForm.value.ingredients[i];\r\n          if (ingredient.quantity != null && ingredient.unitType != null && ingredient.name != null) {\r\n            //meal.ingredients.splice(i,1);\r\n            meal.ingredients.push(ingredient);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(this.mealForm.value);\r\n    console.log(this.mealForm.value.ingredients);\r\n    console.log(meal.ingredients);\r\n\r\n    if (this.meal.id) {\r\n      this.mealService\r\n        .put(this.meal.id, meal)\r\n        .pipe(untilDestroyed(this))\r\n        .subscribe(async () => {\r\n          await this.router.navigateByUrl('meals/' + this.meal.id);\r\n        });\r\n      return;\r\n    }\r\n\r\n    this.mealService\r\n      .post(meal)\r\n      .pipe(untilDestroyed(this))\r\n      .subscribe(async (result) => {\r\n        await this.router.navigateByUrl('meals/' + result.data);\r\n      });\r\n  }\r\n\r\n  initializeIngredientForm() {\r\n    const controls =\r\n      this.meal?.ingredients && this.meal?.ingredients.length\r\n        ? this.meal.ingredients.map((value) =>\r\n          this.createIngredientGroup(value)\r\n        )\r\n        : [this.createIngredientGroup()];\r\n\r\n    this.ingredientsForm = this.formBuilder.array(controls);\r\n    return this.ingredientsForm;\r\n  }\r\n\r\n  createIngredientGroup(ingredientModel?: IngredientModel) {\r\n    return this.formBuilder.group({\r\n      quantity: this.formBuilder.control(ingredientModel?.quantity, []),\r\n      unitType: this.formBuilder.control(ingredientModel?.unitType, []),\r\n      name: this.formBuilder.control(ingredientModel?.ingredientName, []),\r\n    });\r\n  }\r\n\r\n  searchIngredients(searchValue) {\r\n    this.ingredients$ = this.mealService.getIngredientsLookUp(searchValue).pipe(\r\n      untilDestroyed(this),\r\n      map((result) => result.data)\r\n    );\r\n  }\r\n\r\n  addIngredient(value: string) {\r\n    this.mealService\r\n      .postIngredients(value)\r\n      .pipe(untilDestroyed(this))\r\n      .subscribe();\r\n  }\r\n\r\n  nonSupplementValidator(control: AbstractControl) {\r\n    if (this.selectedMealType != MealType.Supplements) {\r\n      return control.value != null || control.value != undefined\r\n        ? null\r\n        : {};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  mealTypeChanged($event: any) {\r\n    this.selectedMealType = $event;\r\n    this.updateTreeValidity(this.mealForm);\r\n  }\r\n\r\n  updateTreeValidity(group: FormGroup | FormArray): void {\r\n    Object.keys(group.controls).forEach((key: string) => {\r\n      const abstractControl = group.controls[key];\r\n\r\n      if (\r\n        abstractControl instanceof FormGroup ||\r\n        abstractControl instanceof FormArray\r\n      ) {\r\n        this.updateTreeValidity(abstractControl);\r\n      } else {\r\n        abstractControl.updateValueAndValidity();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"bg-white mat-elevation-z8\">\r\n  <app-details-header\r\n    [headerTitle]=\"meal?.id ? 'Edit Meal' : 'Add New Meal'\"\r\n  ></app-details-header>\r\n  <form\r\n    [formGroup]=\"mealForm\"\r\n    class=\"d-flex justify-content-center align-items-start w-100 p-3 pt-0 m-0\"\r\n  >\r\n    <div\r\n      class=\"w-100 same-width-flex d-flex flex-column justify-content-center align-items-center padding-end-2\"\r\n    >\r\n      <mat-form-field class=\"w-100\">\r\n        <mat-label>{{ \"MEALS.NAME\" | translate }}</mat-label>\r\n        <input matInput formControlName=\"name\" maxlength=\"25\" />\r\n        <mat-error>{{\r\n          \"VALIDATION_ERRORS.INVALID_VALUE\" | translate\r\n        }}</mat-error>\r\n      </mat-form-field>\r\n\r\n      <div class=\"w-100\">\r\n        <app-attachment-button\r\n          formControlName=\"coverImage\"\r\n        ></app-attachment-button>\r\n      </div>\r\n\r\n      <mat-form-field\r\n        *ngIf=\"selectedMealType != mealType.Supplements\"\r\n        class=\"w-100\"\r\n      >\r\n        <mat-label>{{ \"MEALS.STEPS\" | translate }}</mat-label>\r\n        <textarea\r\n          class=\"info-area\"\r\n          matInput\r\n          formControlName=\"steps\"\r\n        ></textarea>\r\n        <mat-error>{{\r\n          \"VALIDATION_ERRORS.INVALID_VALUE\" | translate\r\n        }}</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"w-100\">\r\n        <mat-label>{{ \"MEALS.ALLERGIES\" | translate }}</mat-label>\r\n        <input matInput formControlName=\"allergies\" maxlength=\"10\" />\r\n        <mat-error>{{\r\n          \"VALIDATION_ERRORS.INVALID_VALUE\" | translate\r\n        }}</mat-error>\r\n      </mat-form-field>\r\n\r\n      <button\r\n        class=\"w-100\"\r\n        mat-flat-button\r\n        color=\"primary\"\r\n        [disabled]=\"mealForm.invalid\"\r\n        (click)=\"submit()\"\r\n      >\r\n        {{ (meal?.id ? \"SHARED.EDIT\" : \"SHARED.ADD\") | translate }}\r\n      </button>\r\n    </div>\r\n    <div class=\"same-width-flex padding-start-2\">\r\n      <mat-form-field class=\"w-100\">\r\n        <mat-label>{{ \"MEALS.LABEL\" | translate }}</mat-label>\r\n        <mat-select\r\n          formControlName=\"label\"\r\n          (valueChange)=\"mealTypeChanged($event)\"\r\n        >\r\n          <mat-option *ngFor=\"let type of mealTypeKeys\" [value]=\"type\">\r\n            {{ \"MEALS.MEAL_TYPE_ENUM.\" + type.toString() | translate }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <div class=\"d-flex justify-content-center align-items-center\">\r\n        <mat-form-field\r\n          *ngIf=\"selectedMealType != mealType.Supplements\"\r\n          class=\"w-100 margin-end-2\"\r\n        >\r\n          <mat-label>{{ \"MEALS.PREP_TIME\" | translate }}</mat-label>\r\n          <input matInput formControlName=\"prepTime\" maxlength=\"7\" />\r\n          <mat-error>{{\r\n            \"VALIDATION_ERRORS.INVALID_VALUE\" | translate\r\n          }}</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field\r\n          *ngIf=\"selectedMealType != mealType.Supplements\"\r\n          class=\"w-100\"\r\n        >\r\n          <mat-label>{{ \"MEALS.COOK_TIME\" | translate }}</mat-label>\r\n          <input matInput formControlName=\"cockingTime\" maxlength=\"7\" />\r\n          <mat-error>{{\r\n            \"VALIDATION_ERRORS.INVALID_VALUE\" | translate\r\n          }}</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div\r\n        *ngIf=\"selectedMealType != mealType.Supplements\"\r\n        class=\"d-flex flex-column\"\r\n      >\r\n        <div>\r\n          <p>{{ \"MEALS.INGREDIENTS\" | translate }}</p>\r\n          <div formArrayName=\"ingredients\">\r\n            <div\r\n              *ngFor=\"let control of ingredientsForm.controls; let i = index\"\r\n              [formGroupName]=\"i\"\r\n              class=\"d-flex justify-content-center align-items-center\"\r\n            >\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>{{\r\n                  \"MEALS.INGREDIENT.QUANTITY\" | translate\r\n                }}</mat-label>\r\n                <input\r\n                  type=\"number\"\r\n                  matInput\r\n                  formControlName=\"quantity\"\r\n                  min=\"0\"\r\n                />\r\n                <mat-error>{{\r\n                  \"VALIDATION_ERRORS.INVALID_VALUE\" | translate\r\n                }}</mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"w-100 mx-1\">\r\n                <mat-label>{{ \"MEALS.INGREDIENT.UNIT\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"unitType\">\r\n                  <mat-option *ngFor=\"let type of ingredientUnitTypeKeys\" [value]=\"ingredientUnitType[type]\">\r\n                    {{ \"MEALS.MEAL_UNIT_TYPE.\" + type.toString() | translate }}\r\n                  </mat-option>\r\n                </mat-select>\r\n\r\n                <mat-error>{{\r\n                  \"VALIDATION_ERRORS.INVALID_VALUE\" | translate\r\n                }}</mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field>\r\n                <mat-label>{{ \"MEALS.INGREDIENT.NAME\" | translate }}</mat-label>\r\n                <div\r\n                  class=\"custom-wrapper-example\"\r\n                  matAutocompleteOrigin\r\n                  #origin=\"matAutocompleteOrigin\"\r\n                >\r\n                  <input\r\n                    #input\r\n                    (focus)=\"searchIngredients(input.value)\"\r\n                    (input)=\"\r\n                      $any(ingredientsForm.controls[i]).controls[\r\n                        'name'\r\n                      ].setErrors({\r\n                        invalid: true\r\n                      });\r\n                      searchIngredients(input.value)\r\n                    \"\r\n                    matInput\r\n                    [formControl]=\"\r\n                      $any(ingredientsForm.controls[i]).controls['name']\r\n                    \"\r\n                    [matAutocomplete]=\"auto\"\r\n                    [matAutocompleteConnectedTo]=\"origin\"\r\n                  />\r\n                </div>\r\n\r\n                <mat-autocomplete\r\n                  #auto=\"matAutocomplete\"\r\n                  (optionSelected)=\"\r\n                    input.value = $event.option.value;\r\n                    $any(ingredientsForm.controls[i]).controls[\r\n                      'name'\r\n                    ].setErrors(null)\r\n                  \"\r\n                >\r\n                  <mat-option\r\n                    *ngIf=\"input.value.length > 0\"\r\n                    (click)=\"addIngredient(input.value)\"\r\n                    [value]=\"input.value\"\r\n                    >{{ \"MEALS.NOT_EXIST_INGREDIENT\" | translate }}</mat-option\r\n                  >\r\n                  <mat-option\r\n                    *ngFor=\"let option of ingredients$ | async\"\r\n                    [value]=\"option\"\r\n                    >{{ option }}</mat-option\r\n                  >\r\n                </mat-autocomplete>\r\n                <mat-error>{{\r\n                  \"VALIDATION_ERRORS.INVALID_VALUE\" | translate\r\n                }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          class=\"w-100\"\r\n          mat-flat-button\r\n          color=\"primary\"\r\n          (click)=\"\r\n            $event.preventDefault();\r\n            ingredientsForm.push(createIngredientGroup())\r\n          \"\r\n        >\r\n          {{ \"MEALS.ADD_MORE_INGREDIENTS\" | translate }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { debounceTime, distinctUntilChanged, Observable, Subject } from 'rxjs';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Router } from '@angular/router';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { PagedListQueryModel } from '../../../core/shared';\r\nimport { MealsActions } from '../../../core/store/meals/meals.action';\r\nimport { MealsState } from '../../../core/store/meals/meals.state';\r\nimport { MealListModel } from '../../../core/meals/models/meal-list.model';\r\nimport {MealType} from \"../../../core/meals/models/meal-type.enum\";\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-meals-list',\r\n  templateUrl: './meals-list.component.html',\r\n  styleUrls: ['./meals-list.component.scss'],\r\n})\r\nexport class MealsListComponent implements OnInit {\r\n  displayedColumns = [\r\n    'icon',\r\n    'name',\r\n    'label',\r\n    'cookingTime',\r\n    'preparingTime',\r\n  ];\r\n\r\n  mealType = MealType;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  search$ = new Subject<string>();\r\n  searchWord: string;\r\n\r\n  // Store\r\n  @Select(MealsState.lastPage) meals$: Observable<MealListModel[]>;\r\n  @Select(MealsState.totalRows) totalRows$: Observable<number>;\r\n\r\n  constructor(public router: Router, private store: Store) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadArticles();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.search$\r\n      .pipe(untilDestroyed(this), distinctUntilChanged(), debounceTime(150))\r\n      .subscribe((searchTerm) => {\r\n        this.searchWord = searchTerm;\r\n        this.paginator.pageIndex = 0;\r\n\r\n        this.loadArticles();\r\n      });\r\n  }\r\n\r\n  loadArticles() {\r\n    this.store.dispatch(\r\n      new MealsActions.LoadMealsPage(this.prepareQueryParams())\r\n    );\r\n  }\r\n\r\n  prepareQueryParams() {\r\n    return new PagedListQueryModel({\r\n      pageNumber: this.paginator.pageIndex,\r\n      pageSize: this.paginator.pageSize,\r\n      searchWord: this.searchWord,\r\n    });\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"mat-elevation-z8 list-container\">\r\n    <app-list-header\r\n      (addClicked)=\"this.router.navigateByUrl('meals/add')\"\r\n      [permissions]=\"'canCreateMeals'\"\r\n      [searchTerm]=\"search$\"\r\n      [withAddButton]=\"true\"\r\n      headerTitle=\"{{ 'MEALS.NAV_TITLE' | translate }}\"\r\n    >\r\n    </app-list-header>\r\n\r\n    <div *ngIf=\"meals$ | async; let meals\">\r\n      <table [dataSource]=\"meals\" class=\"w-100\" mat-table>\r\n        <ng-container matColumnDef=\"icon\">\r\n          <th *matHeaderCellDef mat-header-cell></th>\r\n          <td *matCellDef=\"let element\" mat-cell>\r\n            <span style=\"color: green; font-size: 1.5rem\">\r\n              <i class=\"fa-solid fa-mug-saucer\"></i>\r\n            </span>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n          <th *matHeaderCellDef mat-header-cell>\r\n            {{ \"MEALS.NAME\" | translate }}\r\n          </th>\r\n          <td *matCellDef=\"let element\" mat-cell>\r\n            {{ element.name }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"label\">\r\n          <th *matHeaderCellDef mat-header-cell>\r\n            {{ \"MEALS.LABEL\" | translate }}\r\n          </th>\r\n          <td *matCellDef=\"let element\" mat-cell>\r\n            {{\r\n              \"MEALS.MEALS_LABELS.\" + (mealType[element.mealType] | uppercase)\r\n                | translate\r\n            }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"preparingTime\">\r\n          <th *matHeaderCellDef mat-header-cell>\r\n            {{ \"MEALS.PREP_TIME\" | translate }}\r\n          </th>\r\n          <td *matCellDef=\"let element\" mat-cell>\r\n            {{ element.preparingTime }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"cookingTime\">\r\n          <th *matHeaderCellDef mat-header-cell>\r\n            {{ \"MEALS.COOK_TIME\" | translate }}\r\n          </th>\r\n          <td *matCellDef=\"let element\" mat-cell>\r\n            {{ element.cookingTime }}\r\n          </td>\r\n        </ng-container>\r\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\r\n        <tr\r\n          (click)=\"this.router.navigateByUrl('/meals/' + row.id)\"\r\n          *matRowDef=\"let row; columns: displayedColumns\"\r\n          class=\"mat-row-hover\"\r\n          mat-row\r\n        ></tr>\r\n      </table>\r\n      <app-no-data-placeholder\r\n        [data]=\"meals\"\r\n        classes=\"my-3\"\r\n      ></app-no-data-placeholder>\r\n    </div>\r\n\r\n    <mat-paginator\r\n      #paginator\r\n      (page)=\"loadArticles()\"\r\n      [length]=\"totalRows$ | async\"\r\n      [pageSizeOptions]=\"[1, 5, 10, 25, 100]\"\r\n      [pageSize]=\"10\"\r\n      [showFirstLastButtons]=\"true\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Route, RouterModule } from '@angular/router';\r\nimport { MealsListComponent } from './meals-list/meals-list.component';\r\nimport { MealDetailsComponent } from './meal-details/meal-details.component';\r\nimport { MealEditComponent } from './meal-edit/meal-edit.component';\r\nimport { PermissionGuard } from '../../core/shared/guards/permission-guard.service';\r\n\r\nconst routes: Route[] = [\r\n  {\r\n    path: '',\r\n    component: MealsListComponent,\r\n    canActivate: [PermissionGuard],\r\n    data: {\r\n      permission: 'canViewMeals',\r\n    },\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    component: MealEditComponent,\r\n    canActivate: [PermissionGuard],\r\n    data: {\r\n      permission: 'canEditMeals',\r\n    },\r\n  },\r\n  {\r\n    path: 'add',\r\n    component: MealEditComponent,\r\n    canActivate: [PermissionGuard],\r\n    data: {\r\n      permission: 'canCreateMeals',\r\n    },\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: MealDetailsComponent,\r\n    canActivate: [PermissionGuard],\r\n    data: {\r\n      permission: 'canViewMeals',\r\n    },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MealsRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NgxPermissionsModule } from 'ngx-permissions';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MealsRoutingModule } from './meals-routing.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { MealsListComponent } from './meals-list/meals-list.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MealDetailsComponent } from './meal-details/meal-details.component';\r\nimport { MealEditComponent } from './meal-edit/meal-edit.component';\r\nimport { MealsState } from '../../core/store/meals/meals.state';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { MealService } from '../../core/meals/meal.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [MealEditComponent, MealsListComponent, MealDetailsComponent],\r\n  exports: [],\r\n  imports: [\r\n    CommonModule,\r\n    MealsRoutingModule,\r\n    MatPaginatorModule,\r\n    TranslateModule,\r\n    NgxsModule.forFeature([MealsState]),\r\n    NgxPermissionsModule.forChild(),\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    SharedModule,\r\n    MatTableModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n  ],\r\n  providers: [MealService],\r\n})\r\nexport class MealsModule {}\r\n"],"names":["Select","of","switchMap","tap","IngredientUnitType","UntilDestroy","untilDestroyed","MealsActions","MealsState","MealType","ConfirmDialogComponent","i0","ctx_r11","ctx_r18","_r4","mealDetails_r1","MealDetailsComponent","constructor","store","activatedRoute","router","matDialog","mealService","ngOnInit","params","pipe","subscribe","id","mealId","dispatch","LoadMealDetails","deleteMeal","open","afterClosed","d","delete","r","navigateByUrl","editMeal","navigate","relativeTo","selectors","decls","vars","consts","template","__decorate","lastLoadedMeal","FormArray","FormGroup","Validators","mealTypes","ingredientUnitTypeKeys","MealDetailsModel","map","Media","ctx_r16","ctx_r19","ctx_r21","setErrors","invalid","_r11","ctx_r22","_r12","_r10","$event","ctx_r23","MealEditComponent","formBuilder","meal","selectedMealType","Breakfast","initializeMealForm","p","loadMeal","select","mealType","mealForm","group","name","control","_a","required","label","_b","prepTime","_c","preparingTime","nonSupplementValidator","bind","cockingTime","_d","steps","_e","mealSteps","allergies","_f","coverImage","_g","url","setControl","initializeIngredientForm","submit","value","Supplements","ingredients","i","length","ingredient","quantity","unitType","push","console","log","put","post","result","data","controls","createIngredientGroup","ingredientsForm","array","ingredientModel","ingredientName","searchIngredients","searchValue","ingredients$","getIngredientsLookUp","addIngredient","postIngredients","undefined","mealTypeChanged","updateTreeValidity","Object","keys","forEach","key","abstractControl","updateValueAndValidity","ctx","MatPaginator","debounceTime","distinctUntilChanged","Subject","PagedListQueryModel","row_r20","MealsListComponent","loadArticles","ngAfterViewInit","search$","searchTerm","searchWord","paginator","pageIndex","LoadMealsPage","prepareQueryParams","pageNumber","pageSize","viewQuery","lastPage","totalRows"],"sourceRoot":"webpack:///"}